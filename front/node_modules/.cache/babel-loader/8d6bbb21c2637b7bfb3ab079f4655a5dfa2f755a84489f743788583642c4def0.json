{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Desktop/ai_challenge/src/chat.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\n//{\n//    \"messages\": [\n//        {\n//            \"role\": \"user\",\n//            \"content\": \"Hello, ChatGPT!\"\n//        }\n//    ],\n//    \"model\": \"gpt-3.5-turbo\"\n//}\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatbotApp = () => {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [apiResponse, setApiResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:3001/send-message', {\n        // Update the URL to include port 3001\n        \"messages\": [{\n          \"role\": \"user\",\n          \"content\": prompt\n        }],\n        \"model\": \"gpt-3.5-turbo\"\n      });\n      setApiResponse(response.data);\n    } catch (error) {\n      console.error(error);\n      setApiResponse(\"Something went wrong. Please try again.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          value: prompt,\n          placeholder: \"Please ask OpenAI\",\n          onChange: e => setPrompt(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: loading || prompt.length === 0,\n          type: \"submit\",\n          children: loading ? \"Generating...\" : \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), apiResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"API response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), apiResponse]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatbotApp, \"rdALbmbvYDq7nWCGU4NZSj+k/jI=\");\n_c = ChatbotApp;\nexport default ChatbotApp;\nvar _c;\n$RefreshReg$(_c, \"ChatbotApp\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatbotApp","_s","prompt","setPrompt","apiResponse","setApiResponse","loading","setLoading","handleSubmit","e","preventDefault","response","post","data","error","console","children","style","display","justifyContent","alignItems","height","onSubmit","type","value","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","disabled","length","_c","$RefreshReg$"],"sources":["/home/oleg/Desktop/ai_challenge/src/chat.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\n//{\n//    \"messages\": [\n//        {\n//            \"role\": \"user\",\n//            \"content\": \"Hello, ChatGPT!\"\n//        }\n//    ],\n//    \"model\": \"gpt-3.5-turbo\"\n//}\n\n\nconst ChatbotApp = () => {\n  const [prompt, setPrompt] = useState(\"\");\n  const [apiResponse, setApiResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:3001/send-message', {  // Update the URL to include port 3001\n\t  \"messages\": [\n\t\t        {\n\t\t            \"role\": \"user\",\n\t\t            \"content\": prompt\n\t\t        }\n\t\t    ],\n\t\t    \"model\": \"gpt-3.5-turbo\"\n      });\n      setApiResponse(response.data);\n    } catch (error) {\n      console.error(error);\n      setApiResponse(\"Something went wrong. Please try again.\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: '100vh' }}>\n        <form onSubmit={handleSubmit}>\n          <textarea\n            type=\"text\"\n            value={prompt}\n            placeholder=\"Please ask OpenAI\"\n            onChange={(e) => setPrompt(e.target.value)}\n          ></textarea>\n          <button disabled={loading || prompt.length === 0} type=\"submit\">\n            {loading ? \"Generating...\" : \"Generate\"}\n          </button>\n        </form>\n      </div>\n      {apiResponse && (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <pre>\n            <strong>API response:</strong>\n            {apiResponse}\n          </pre>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ChatbotApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}