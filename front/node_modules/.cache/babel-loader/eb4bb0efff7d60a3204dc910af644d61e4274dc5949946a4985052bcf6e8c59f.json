{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Desktop/ai_challenge/src/chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport OpenAI from 'openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY\n});\nconst ChatInterface = () => {\n  _s();\n  const [inputMessage, setInputMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const sendMessage = async () => {\n    try {\n      const openaiResponse = await generateResponse(inputMessage);\n      console.log(\"Response from OpenAI:\", openaiResponse);\n\n      // Update state with the response from OpenAI\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'user',\n        text: inputMessage\n      }, {\n        sender: 'bot',\n        text: openaiResponse\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n\n    // Clear input field\n    setInputMessage('');\n  };\n  const generateResponse = async message => {\n    try {\n      const response = await openai.chat.completions.create({\n        model: \"gpt-3.5-turbo\",\n        messages: [{\n          \"role\": \"user\",\n          \"content\": message\n        }],\n        temperature: 1,\n        max_tokens: 256,\n        top_p: 1,\n        frequency_penalty: 0,\n        presence_penalty: 0\n      });\n      return response.data.choices[0].message.content.trim();\n    } catch (error) {\n      console.error('Error generating response:', error);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"Kvl+r7mhzaQ215QlKd5ScVqk30I=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","axios","OpenAI","jsxDEV","_jsxDEV","openai","apiKey","process","env","OPENAI_API_KEY","ChatInterface","_s","inputMessage","setInputMessage","messages","setMessages","sendMessage","openaiResponse","generateResponse","console","log","prevMessages","sender","text","error","message","response","chat","completions","create","model","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","data","choices","content","trim","children","className","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/oleg/Desktop/ai_challenge/src/chat.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport OpenAI from 'openai';\n\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n\nconst ChatInterface = () => {\n  const [inputMessage, setInputMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const sendMessage = async () => {\n    try {\n      const openaiResponse = await generateResponse(inputMessage);\n      console.log(\"Response from OpenAI:\", openaiResponse);\n\n      // Update state with the response from OpenAI\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { sender: 'user', text: inputMessage },\n        { sender: 'bot', text: openaiResponse }\n      ]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n\n    // Clear input field\n    setInputMessage('');\n  };\n\n  const generateResponse = async (message) => {\n    try {\n      const response = await openai.chat.completions.create({\n        model: \"gpt-3.5-turbo\",\n        messages: [\n          {\n            \"role\": \"user\",\n            \"content\": message\n          }\n        ],\n        temperature: 1,\n        max_tokens: 256,\n        top_p: 1,\n        frequency_penalty: 0,\n        presence_penalty: 0,\n      });\n\n      return response.data.choices[0].message.content.trim();\n    } catch (error) {\n      console.error('Error generating response:', error);\n      return null;\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"chat-window\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`message ${msg.sender}`}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={inputMessage}\n          onChange={e => setInputMessage(e.target.value)}\n          placeholder=\"Type your message...\"\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}