{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Desktop/ai_challenge/src/components/chat_page/chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from './scss/chat_page.module.scss';\nimport axios from \"axios\";\nimport { Message } from \"../chat_components/message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotApp = () => {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [apiResponse, setApiResponse] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setPrompt('');\n    const date = new Date();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const formattedTime = `${hours % 12 || 12}:${minutes < 10 ? '0' : ''}${minutes}`;\n    const userMsg = [prompt, formattedTime, 1];\n    setApiResponse([...apiResponse, userMsg]);\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:3001/send-message', {\n        messages: [{\n          role: \"user\",\n          content: prompt\n        }],\n        model: \"gpt-3.5-turbo\"\n      });\n      const botMsg = [response.data.choices[0].message.content, response.data.created, 0];\n      setApiResponse(prevState => [...prevState, botMsg]);\n    } catch (error) {\n      console.error(error);\n      const date = new Date();\n      const hours = date.getHours();\n      const minutes = date.getMinutes();\n      const formattedTime = `${hours % 12 || 12}:${minutes < 10 ? '0' : ''}${minutes}`;\n      setApiResponse(prevState => [...prevState, [\"Something went wrong. Please try again.\", formattedTime, 0]]);\n    }\n    setLoading(false);\n  };\n  const handleChangeHeight = e => {\n    const textarea = e.target;\n    textarea.style.height = 'auto'; // Reset height to auto to properly calculate new height\n    textarea.style.overflowY = 'hidden'; // Hide the vertical scrollbar\n\n    // Calculate the number of lines of text in the textarea\n    const lines = textarea.value.split('\\n').length;\n\n    // Set the minimum height to 20px per line (adjust as needed)\n    const minHeight = 20;\n\n    // Set the textarea's height based on the number of lines\n    textarea.style.height = `${minHeight * lines}px`;\n\n    // Only adjust the scrolling position if the textarea has more than three lines of text\n    if (lines > 3) {\n      // Adjust the scrollTop property to simulate the effect of moving upwards\n      textarea.scrollTop = textarea.scrollHeight;\n    }\n    if (lines > 2 && lines < 7) {\n      textarea.style.top = `-${lines * 20 / 2}px`;\n    }\n    textarea.style.position = 'relative';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatPage,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.messagesList,\n      children: apiResponse.map((response, index) => /*#__PURE__*/_jsxDEV(Message, {\n        message: response[0],\n        dateTime: response[1],\n        isUser: response[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.formInput,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: styles.inputText,\n        type: \"text\",\n        value: prompt,\n        placeholder: \"Please ask OpenAI\",\n        onChange: e => {\n          setPrompt(e.target.value);\n          handleChangeHeight(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submitBtn,\n        disabled: loading || prompt.length === 0,\n        type: \"submit\",\n        children: loading ? \"Generating...\" : \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotApp, \"TfHVJNcXhosWA14DcynnCexVSbI=\");\n_c = ChatbotApp;\nexport default ChatbotApp;\nvar _c;\n$RefreshReg$(_c, \"ChatbotApp\");","map":{"version":3,"names":["React","useState","styles","axios","Message","jsxDEV","_jsxDEV","ChatbotApp","_s","prompt","setPrompt","apiResponse","setApiResponse","loading","setLoading","handleSubmit","e","preventDefault","date","Date","hours","getHours","minutes","getMinutes","formattedTime","userMsg","response","post","messages","role","content","model","botMsg","data","choices","message","created","prevState","error","console","handleChangeHeight","textarea","target","style","height","overflowY","lines","value","split","length","minHeight","scrollTop","scrollHeight","top","position","className","chatPage","children","messagesList","map","index","dateTime","isUser","fileName","_jsxFileName","lineNumber","columnNumber","formInput","onSubmit","inputText","type","placeholder","onChange","submitBtn","disabled","_c","$RefreshReg$"],"sources":["/home/oleg/Desktop/ai_challenge/src/components/chat_page/chat.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from './scss/chat_page.module.scss'\nimport axios from \"axios\";\nimport { Message } from \"../chat_components/message\";\n\nconst ChatbotApp = () => {\n  const [prompt, setPrompt] = useState(\"\");\n  const [apiResponse, setApiResponse] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    setPrompt('')\n\n    const date = new Date();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const formattedTime = `${hours % 12 || 12}:${minutes < 10 ? '0' : ''}${minutes}`;\n  \n    const userMsg = [prompt, formattedTime, 1];\n    setApiResponse([...apiResponse, userMsg]);\n    setLoading(true);\n  \n    try {\n      const response = await axios.post('http://localhost:3001/send-message', {\n        messages: [\n          {\n            role: \"user\",\n            content: prompt\n          }\n        ],\n        model: \"gpt-3.5-turbo\"\n      });\n  \n      const botMsg = [response.data.choices[0].message.content, response.data.created, 0];\n      setApiResponse(prevState => [...prevState, botMsg]);\n    } catch (error) {\n      console.error(error);\n      const date = new Date();\n      const hours = date.getHours();\n      const minutes = date.getMinutes();\n      const formattedTime = `${hours % 12 || 12}:${minutes < 10 ? '0' : ''}${minutes}`;\n      setApiResponse(prevState => [...prevState, [\"Something went wrong. Please try again.\", formattedTime, 0]]);\n    }\n  \n    setLoading(false);\n  };\n  const handleChangeHeight = (e) => {\n    const textarea = e.target;\n    textarea.style.height = 'auto'; // Reset height to auto to properly calculate new height\n    textarea.style.overflowY = 'hidden'; // Hide the vertical scrollbar\n    \n    // Calculate the number of lines of text in the textarea\n    const lines = textarea.value.split('\\n').length;\n    \n    // Set the minimum height to 20px per line (adjust as needed)\n    const minHeight = 20;\n    \n    // Set the textarea's height based on the number of lines\n    textarea.style.height = `${minHeight * lines}px`;\n  \n    // Only adjust the scrolling position if the textarea has more than three lines of text\n    if (lines > 3) {\n      // Adjust the scrollTop property to simulate the effect of moving upwards\n      textarea.scrollTop = textarea.scrollHeight;\n    }\n    if (lines > 2 && lines < 7) {\n      textarea.style.top = `-${(lines * 20) / 2}px`\n    }\n    textarea.style.position = 'relative'\n  }\n  \n\n  return (\n    <div className={styles.chatPage}>  \n\t<ul className={styles.messagesList}>\n      {apiResponse.map((response, index) => (\n        <Message message={response[0]} dateTime={response[1]} isUser={response[2]}/>\n      ))}\n\t</ul>\n  <form className={styles.formInput} onSubmit={handleSubmit}>\n        <textarea\n          className={styles.inputText}\n          type=\"text\"\n          value={prompt}\n          placeholder=\"Please ask OpenAI\"\n          onChange={(e) => { setPrompt(e.target.value); handleChangeHeight(e); }}\n        >\n        </textarea>\n        <button className={styles.submitBtn} disabled={loading || prompt.length === 0} type=\"submit\">\n          {loading ? \"Generating...\" : \"Generate\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatbotApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}