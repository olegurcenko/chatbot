{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Desktop/ai_challenge/src/components/chat_page/chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from './scss/chat_page.module.scss';\nimport axios from \"axios\";\nimport { Message } from \"../chat_components/message\";\nimport send_btn from './images/send_btn.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotApp = () => {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [apiResponse, setApiResponse] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [role, serRole] = useState(\"Assistant\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setPrompt('');\n    const textarea = document.querySelector('textarea');\n    if (textarea) {\n      textarea.style.height = '70px';\n    }\n    const date = new Date();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const formattedTime = `${hours % 12 || 12}:${minutes < 10 ? '0' : ''}${minutes}`;\n    const userMsg = [prompt, formattedTime, 1];\n    setApiResponse([...apiResponse, userMsg]);\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:3001/send-message', {\n        messages: [{\n          role: \"user\",\n          content: prompt\n        }],\n        model: \"gpt-3.5-turbo\"\n      });\n      const botMsg = [response.data.choices[0].message.content, response.data.created, 0];\n      setApiResponse(prevState => [...prevState, botMsg]);\n    } catch (error) {\n      console.error(error);\n      const date = new Date();\n      const hours = date.getHours();\n      const minutes = date.getMinutes();\n      const formattedTime = `${hours % 12 || 12}:${minutes < 10 ? '0' : ''}${minutes}`;\n      setApiResponse(prevState => [...prevState, [\"Something went wrong. Please try again.\", formattedTime, 0]]);\n    }\n    setLoading(false);\n  };\n  const handleChangeHeight = e => {\n    const textarea = e.target;\n    textarea.style.height = 0;\n    textarea.style.height = textarea.scrollHeight + 'px';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatPage,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setRole(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.messagesList,\n      children: apiResponse.map((response, index) => /*#__PURE__*/_jsxDEV(Message, {\n        message: response[0],\n        dateTime: response[1],\n        isUser: response[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.formInput,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.inputWrapper,\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: styles.inputText,\n          type: \"text\",\n          value: prompt,\n          placeholder: \"Please ask OpenAI\",\n          onChange: e => {\n            setPrompt(e.target.value);\n            handleChangeHeight(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submitBtn,\n        disabled: loading || prompt.length === 0,\n        type: \"submit\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.wave,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            class: styles.dot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: styles.dot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: styles.dot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: send_btn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotApp, \"Kgbvj4WUt7CbFYphXetlxx6173A=\");\n_c = ChatbotApp;\nexport default ChatbotApp;\nvar _c;\n$RefreshReg$(_c, \"ChatbotApp\");","map":{"version":3,"names":["React","useState","styles","axios","Message","send_btn","jsxDEV","_jsxDEV","ChatbotApp","_s","prompt","setPrompt","apiResponse","setApiResponse","loading","setLoading","role","serRole","handleSubmit","e","preventDefault","textarea","document","querySelector","style","height","date","Date","hours","getHours","minutes","getMinutes","formattedTime","userMsg","response","post","messages","content","model","botMsg","data","choices","message","created","prevState","error","console","handleChangeHeight","target","scrollHeight","className","chatPage","children","type","onChange","setRole","value","fileName","_jsxFileName","lineNumber","columnNumber","messagesList","map","index","dateTime","isUser","formInput","onSubmit","inputWrapper","inputText","placeholder","submitBtn","disabled","length","wave","class","dot","src","_c","$RefreshReg$"],"sources":["/home/oleg/Desktop/ai_challenge/src/components/chat_page/chat.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from './scss/chat_page.module.scss'\nimport axios from \"axios\";\nimport { Message } from \"../chat_components/message\";\nimport send_btn from './images/send_btn.png'\n\nconst ChatbotApp = () => {\n  const [prompt, setPrompt] = useState(\"\");\n  const [apiResponse, setApiResponse] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [role, serRole] = useState(\"Assistant\")\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n\n    setPrompt('')\n\n    const textarea = document.querySelector('textarea');\n  if (textarea) {\n    textarea.style.height = '70px';\n  }\n\n    const date = new Date();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const formattedTime = `${hours % 12 || 12}:${minutes < 10 ? '0' : ''}${minutes}`;\n  \n    const userMsg = [prompt, formattedTime, 1];\n    setApiResponse([...apiResponse, userMsg]);\n    setLoading(true);\n  \n    try {\n      const response = await axios.post('http://localhost:3001/send-message', {\n        messages: [\n          {\n            role: \"user\",\n            content: prompt\n          }\n        ],\n        model: \"gpt-3.5-turbo\"\n      });\n  \n      const botMsg = [response.data.choices[0].message.content, response.data.created, 0];\n      setApiResponse(prevState => [...prevState, botMsg]);\n    } catch (error) {\n      console.error(error);\n      const date = new Date();\n      const hours = date.getHours();\n      const minutes = date.getMinutes();\n      const formattedTime = `${hours % 12 || 12}:${minutes < 10 ? '0' : ''}${minutes}`;\n      setApiResponse(prevState => [...prevState, [\"Something went wrong. Please try again.\", formattedTime, 0]]);\n    }\n  \n    setLoading(false);\n  };\n  const handleChangeHeight = (e) => {\n    const textarea = e.target;\n    textarea.style.height = 0;\n    textarea.style.height = textarea.scrollHeight + 'px';\n  }\n  \n\n  return (\n    <div className={styles.chatPage}>  \n  <input type=\"text\" \n  onChange={(e) => setRole(e.target.value)}\n  />\n\t<ul className={styles.messagesList}>\n      {apiResponse.map((response, index) => (\n        <Message message={response[0]} dateTime={response[1]} isUser={response[2]}/>\n      ))}\n\t</ul>\n  <form className={styles.formInput} onSubmit={handleSubmit}>\n        <section className={styles.inputWrapper}>\n\n        <textarea\n          className={styles.inputText}\n          type=\"text\"\n          value={prompt}\n          placeholder=\"Please ask OpenAI\"\n          onChange={(e) => { setPrompt(e.target.value); handleChangeHeight(e); }}\n          >\n        </textarea>\n          </section>\n        <button className={styles.submitBtn} disabled={loading || prompt.length === 0} type=\"submit\">\n          {/*{loading ? \"Generating...\" : \"Generate\"}*/}\n          {loading ?  \n          <div className={styles.wave}>\n            <span class={styles.dot}></span>\n            <span class={styles.dot}></span>\n            <span class={styles.dot}></span>\n          </div>\n          :\n          <img src={send_btn}/> \n          }\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatbotApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}