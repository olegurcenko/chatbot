{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Desktop/ai_challenge/src/chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [inputMessage, setInputMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const sendMessage = async () => {\n    try {\n      const options = {\n        method: 'POST',\n        url: 'https://api.ai21.com/studio/v1/tokenize',\n        headers: {\n          accept: 'application/json',\n          'content-type': 'application/json',\n          Authorization: 'Bearer CFGpHpI79jWZAToZNTgxfJSN3blQFyue'\n        },\n        data: {\n          text: inputMessage\n        }\n      };\n      const response = await axios.request(options);\n      console.log(response.data);\n      // Process response data if needed\n\n      // Update state with response data or other processing\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n\n    // Clear input field\n    setInputMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"Kvl+r7mhzaQ215QlKd5ScVqk30I=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatInterface","_s","inputMessage","setInputMessage","messages","setMessages","sendMessage","options","method","url","headers","accept","Authorization","data","text","response","request","console","log","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/oleg/Desktop/ai_challenge/src/chat.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ChatInterface = () => {\n  const [inputMessage, setInputMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const sendMessage = async () => {\n    try {\n      const options = {\n        method: 'POST',\n        url: 'https://api.ai21.com/studio/v1/tokenize',\n        headers: {\n          accept: 'application/json',\n          'content-type': 'application/json',\n          Authorization: 'Bearer CFGpHpI79jWZAToZNTgxfJSN3blQFyue'\n        },\n        data: { text: inputMessage }\n      };\n\n      const response = await axios.request(options);\n      console.log(response.data);\n      // Process response data if needed\n\n      // Update state with response data or other processing\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n\n    // Clear input field\n    setInputMessage('');\n  };\n\n  return (\n    <div>\n      <div className=\"chat-window\">\n        {/* Display messages */}\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={inputMessage}\n          onChange={e => setInputMessage(e.target.value)}\n          placeholder=\"Type your message...\"\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,yCAAyC;QAC9CC,OAAO,EAAE;UACPC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE;QACjB,CAAC;QACDC,IAAI,EAAE;UAAEC,IAAI,EAAEZ;QAAa;MAC7B,CAAC;MAED,MAAMa,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,OAAO,CAACT,OAAO,CAAC;MAC7CU,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACF,IAAI,CAAC;MAC1B;;MAEA;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;;IAEA;IACAhB,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACEJ,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAKsB,SAAS,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvB,CAAC,eACN1B,OAAA;MAAKsB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC9BrB,OAAA;QACE2B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEzB,YAAa;QACpB0B,QAAQ,EAAEC,CAAC,IAAI1B,eAAe,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,WAAW,EAAC;MAAsB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACF1B,OAAA;QAAQiC,OAAO,EAAE1B,WAAY;QAAAc,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA9CID,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAgDnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}