{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Desktop/ai_challenge/repo/front/src/components/chat_page/chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport styles from './scss/chat_page.module.scss';\nimport axios from \"axios\";\nimport { Message } from \"../chat_components/message\";\nimport send_btn from './images/send_btn.png';\nimport { ThemeContext } from \"../../context/theme_context\";\nimport light from './images/light.png';\nimport dark from './images/dark.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotApp = () => {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [apiResponse, setApiResponse] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [role, setRole] = useState(\"assistant\");\n  const {\n    darkTheme,\n    toggleTheme\n  } = useContext(ThemeContext);\n  const [themeOnBtn, setThemeOnBtn] = useState(1);\n  useEffect(() => {\n    document.documentElement.setAttribute(\"data-theme\", darkTheme ? \"dark\" : \"light\");\n    darkTheme ? setThemeOnBtn(1) : setThemeOnBtn(0);\n  }, [darkTheme]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const textarea = document.querySelector('textarea');\n    if (textarea) {\n      textarea.style.height = '70px';\n    }\n    const date = new Date();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const formattedTime = `${hours % 12 || 12}:${minutes < 10 ? '0' : ''}${minutes}`;\n    const userMsg = [prompt, formattedTime, 1];\n    setApiResponse([...apiResponse, userMsg]);\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:3001/send-message', {\n        messages: [{\n          role: role,\n          content: prompt\n        }],\n        model: \"gpt-3.5-turbo\"\n      });\n      const botMsg = [response.data.choices[0].message.content, formattedTime, 0];\n      setApiResponse(prevState => [...prevState, botMsg]);\n    } catch (error) {\n      console.error(error);\n      setApiResponse(prevState => [...prevState, [\"Something went wrong. Please try again.\", formattedTime, 0]]);\n    }\n    setLoading(false);\n    setPrompt('');\n  };\n  const handleChangeHeight = e => {\n    const textarea = e.target;\n    textarea.style.height = 0;\n    textarea.style.height = textarea.scrollHeight + 'px';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatPage,\n    children: [/*#__PURE__*/_jsxDEV(ToggleThemeButton, {\n      darkTheme: darkTheme,\n      toggleTheme: toggleTheme,\n      themeOnBtn: themeOnBtn,\n      lightIcon: light,\n      darkIcon: dark\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      apiResponse: apiResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      handleSubmit: handleSubmit,\n      handleChangeHeight: handleChangeHeight,\n      loading: loading,\n      prompt: prompt,\n      setPrompt: setPrompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatbotApp, \"KuesWeS+UX55JjDRx2kr1XgtS6U=\");\n_c = ChatbotApp;\nexport default ChatbotApp;\nvar _c;\n$RefreshReg$(_c, \"ChatbotApp\");","map":{"version":3,"names":["React","useContext","useState","useEffect","styles","axios","Message","send_btn","ThemeContext","light","dark","jsxDEV","_jsxDEV","ChatbotApp","_s","prompt","setPrompt","apiResponse","setApiResponse","loading","setLoading","role","setRole","darkTheme","toggleTheme","themeOnBtn","setThemeOnBtn","document","documentElement","setAttribute","handleSubmit","e","preventDefault","textarea","querySelector","style","height","date","Date","hours","getHours","minutes","getMinutes","formattedTime","userMsg","response","post","messages","content","model","botMsg","data","choices","message","prevState","error","console","handleChangeHeight","target","scrollHeight","className","chatPage","children","ToggleThemeButton","lightIcon","darkIcon","fileName","_jsxFileName","lineNumber","columnNumber","MessageList","ChatInput","_c","$RefreshReg$"],"sources":["/home/oleg/Desktop/ai_challenge/repo/front/src/components/chat_page/chat.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport styles from './scss/chat_page.module.scss'\nimport axios from \"axios\";\nimport { Message } from \"../chat_components/message\";\nimport send_btn from './images/send_btn.png'\nimport { ThemeContext } from \"../../context/theme_context\";\nimport light from './images/light.png'\nimport dark from './images/dark.png'\n\nconst ChatbotApp = () => {\n    const [prompt, setPrompt] = useState(\"\");\n    const [apiResponse, setApiResponse] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [role, setRole] = useState(\"assistant\")\n    const { darkTheme, toggleTheme } = useContext(ThemeContext);\n    const [themeOnBtn, setThemeOnBtn] = useState(1);\n\n    useEffect(() => {\n        document.documentElement.setAttribute(\n            \"data-theme\",\n            darkTheme ? \"dark\" : \"light\"\n        );\n        darkTheme ? setThemeOnBtn(1) : setThemeOnBtn(0)\n    }, [darkTheme]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const textarea = document.querySelector('textarea');\n        if (textarea) {\n            textarea.style.height = '70px';\n        }\n        const date = new Date();\n        const hours = date.getHours();\n        const minutes = date.getMinutes();\n        const formattedTime = `${hours % 12 || 12}:${minutes < 10 ? '0' : ''}${minutes}`;\n        const userMsg = [prompt, formattedTime, 1];\n        setApiResponse([...apiResponse, userMsg]);\n        setLoading(true);\n\n        try {\n            const response = await axios.post('http://localhost:3001/send-message', {\n                messages: [{ role: role, content: prompt }],\n                model: \"gpt-3.5-turbo\"\n            });\n            const botMsg = [response.data.choices[0].message.content, formattedTime, 0];\n            setApiResponse(prevState => [...prevState, botMsg]);\n        } catch (error) {\n            console.error(error);\n            setApiResponse(prevState => [...prevState, [\"Something went wrong. Please try again.\", formattedTime, 0]]);\n        }\n        setLoading(false);\n        setPrompt('');\n    };\n\n    const handleChangeHeight = (e) => {\n        const textarea = e.target;\n        textarea.style.height = 0;\n        textarea.style.height = textarea.scrollHeight + 'px';\n    }\n\n    return (\n        <div className={styles.chatPage}>\n            <ToggleThemeButton darkTheme={darkTheme} toggleTheme={toggleTheme} themeOnBtn={themeOnBtn} lightIcon={light} darkIcon={dark} />\n            <MessageList apiResponse={apiResponse} />\n            <ChatInput\n                handleSubmit={handleSubmit}\n                handleChangeHeight={handleChangeHeight}\n                loading={loading}\n                prompt={prompt}\n                setPrompt={setPrompt}\n            />\n        </div>\n    );\n};\n\nexport default ChatbotApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}